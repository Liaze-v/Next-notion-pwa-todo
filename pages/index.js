import Head from 'next/head';
import Image from 'next/image';
import styles from '../styles/Home.module.css';
import { Client } from '@notionhq/client';


export default function Home({ books }) {
  
  //date today
  const dayOfWeekDigit = new Date().getDay();
  const dayList = ["Dimanche","Lundi","Mardi","Mercredi","Jeudi","Vendredi","Samedi"];
  let jourtab = [];
  let jourTODAY = [];
  const nombreJour = 7;
  let connard = dayOfWeekDigit;
  for (let i = 0; i < nombreJour; i++) {
   if(connard >= 7){
      connard = 0
      jourtab.push(books.filter(a => a.properties.Jour.rich_text[0]?.plain_text === dayList[connard]));
      jourTODAY.push(dayList[connard]);
    }else{
      jourtab.push(books.filter(a => a.properties.Jour.rich_text[0]?.plain_text === dayList[connard]));
      jourTODAY.push(dayList[connard]);
    }
    connard = connard +1;
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        {/* <link rel="manifest" href="/manifest.json" />
        <link rel="apple-touch-icon" href="/assets/256.png" />
        <meta name="apple-mobile-web-app-status-bar" content="white" />
        <meta http-equiv="X-UA-Compatible" content="ie=edge" />
        <meta name="theme-color" content="white" /> */}
      </Head>

      <main className={styles.main}>
        <h2 className={styles.title}>Aujourd'hui {jourTODAY[0]}</h2>

        <p className={styles.description}>
          Ces t√¢ches viennent de Notion
        </p>

        <div className={styles.grid}>
          {jourtab[0].map((book) => (
            
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
        <h2 className={styles.title}>{jourTODAY[1]}</h2>
        <div className={styles.grid}>
          {jourtab[1].map((book) => (
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
        <h2 className={styles.title}>{jourTODAY[2]}</h2>
        <div className={styles.grid}>
          {jourtab[2].map((book) => (
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
        <h2 className={styles.title}>{jourTODAY[3]}</h2>
        <div className={styles.grid}>
          {jourtab[3].map((book) => (
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
        <h2 className={styles.title}>{jourTODAY[4]}</h2>
        <div className={styles.grid}>
          {jourtab[4].map((book) => (
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
        <h2 className={styles.title}>{jourTODAY[5]}</h2>
        <div className={styles.grid}>
          {jourtab[5].map((book) => (
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
        <h2 className={styles.title}>{jourTODAY[6]}</h2>
        <div className={styles.grid}>
          {jourtab[6].map((book) => (
            <div className={styles.card} >
              <img src={book.properties.Image.files[0]?.name} alt=''width={100} height={100} />
              <h2>{book.properties.Name.title[0].plain_text}</h2>
              <p>{book.properties.Jour.rich_text[0].plain_text}</p>
            </div>
          ))}
        </div>
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
      {/* <script type="module" src="/zapp.js"></script> */}
    </div>
    
  );
}

export async function getStaticProps() {
  const notion = new Client({ auth: process.env.NOTION_API_KEY });
  const response = await notion.databases.query({
    database_id: process.env.NOTION_DATABASE_ID,
  });

  return {
    props: {
      books: response.results,
    },
    revalidate: 1,
  };
}
